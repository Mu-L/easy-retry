import{d,dR as p,J as w,dQ as k,p as r,i as _,o as v,c as g,h as S,ew as y,dS as $,$ as h}from"./index-CHgAHQIl.js";import{_ as x}from"./workflow.vue_vue_type_script_setup_true_lang-BUvQogY_.js";import"./Grid-DHGKk79k.js";import"./FormItem-B3tfy17D.js";import"./Space-CeVCCXQI.js";import"./DescriptionsItem-sCQ7QkHp.js";import"./index-DBxP5q3t.js";const q=d({name:"workflow_form_copy",__name:"index",setup(R){const s=p(),l=w(),n=k(),a=r(!1),i=String(l.query.id),e=r({workflowName:`Workflow ${new Date().getTime()}`,workflowStatus:1,blockStrategy:1,description:void 0,executorTimeout:60}),c=async()=>{a.value=!0;const{data:t,error:o}=await y(i);o||(e.value=t),a.value=!1};_(()=>{s.clear(),s.setType(0),c()});const u=async()=>{var o;const{error:t}=await $(e.value);t||((o=window.$message)==null||o.info(h("common.addSuccess")),n.push("/workflow/task"))},f=()=>{n.push("/workflow/task")};return(t,o)=>(v(),g(S(x),{modelValue:e.value,"onUpdate:modelValue":o[0]||(o[0]=m=>e.value=m),spinning:a.value,onSave:u,onCancel:f},null,8,["modelValue","spinning"]))}});export{q as default};
